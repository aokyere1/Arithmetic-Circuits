module top_module (
    input [3:0] x,
    input [3:0] y,
    output [4:0] sum
);
    wire [3:0] carry;

    // First full adder with cin = 0
    full_adder fa0(
        .a(x[0]),
        .b(y[0]),
        .cin(1'b0),
        .sum(sum[0]),
        .cout(carry[0])
    );

    // Next three full adders
    genvar i;
    generate
        for (i = 1; i < 4; i = i + 1) begin : gen_adder
            full_adder fa(
                .a(x[i]),
                .b(y[i]),
                .cin(carry[i-1]),
                .sum(sum[i]),
                .cout(carry[i])
            );
        end
    endgenerate

    // Final carry-out becomes MSB of sum
    assign sum[4] = carry[3];

endmodule

// 1-bit Full Adder Module
module full_adder( 
    input a, b, cin,
    output cout, sum 
);
    assign sum = a ^ b ^ cin;
    assign cout = (a & b) | (a & cin) | (b & cin);
endmodule
